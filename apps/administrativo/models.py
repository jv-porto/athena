from django.db import models
from django.contrib.auth.models import User

class Escola(models.Model):
    id = models.CharField(primary_key=True, max_length=4)
    cnpj = models.CharField(max_length=18)
    razao_social = models.CharField(max_length=200)
    nome_fantasia = models.CharField(max_length=200)
    email = models.EmailField()
    telefone = models.CharField(max_length=13)
    celular = models.CharField(max_length=13, blank=True)
    site = models.CharField(max_length=200, blank=True)
    logo = models.ImageField(upload_to='escolas/logos/%Y', blank=True)
    cep = models.CharField(max_length=9)
    lougradouro = models.CharField(max_length=200)
    numero = models.CharField(max_length=5)
    complemento = models.CharField(max_length=200, blank=True)
    bairro = models.CharField(max_length=200)
    cidade = models.CharField(max_length=200)
    estado = models.CharField(max_length=200)
    pais = models.CharField(max_length=200)
    usuario = models.OneToOneField(User, on_delete=models.CASCADE)
    datahora_ultima_alteracao = models.DateTimeField(auto_now=True)
    datahora_cadastro = models.DateTimeField(auto_now_add=True)
    is_active = models.BooleanField(default=True)
    def __int__(self):
        return self.id

class Contrato(models.Model):
    id = models.CharField(primary_key=True, max_length=10)
    tipo = models.CharField(max_length=50)
    inicio_vigencia = models.DateField()
    termino_vigencia = models.DateField()
    valor = models.CharField(max_length=20)
    arquivo = models.FileField(upload_to='contratos/arquivo/%Y/%m')
    digitalizacao = models.ImageField(upload_to='contratos/digitalizacao/%Y/%m', blank=True)
    data_assinatura = models.DateField()
    datahora_ultima_alteracao = models.DateTimeField(auto_now=True)
    datahora_cadastro = models.DateTimeField(auto_now_add=True)
    def __str__(self):
        return self.id

class PessoaEstudante(models.Model):
    id = models.CharField(primary_key=True, max_length=12)
    escola = models.ForeignKey(Escola, on_delete=models.CASCADE)
    matricula = models.CharField(max_length=5)
    nome = models.CharField(max_length=200)
    data_nascimento = models.DateField()
    cpf = models.CharField(max_length=14)
    rg = models.CharField(max_length=12)
    celular = models.CharField(max_length=13)
    telefone = models.CharField(max_length=13, blank=True)
    email = models.EmailField()
    genero = models.CharField(max_length=200)
    cor = models.CharField(max_length=200)
    estado_civil = models.CharField(max_length=200)
    foto = models.ImageField(upload_to='pessoas/fotos/estudantes/%Y', blank=True)
    cep = models.CharField(max_length=9)
    lougradouro = models.CharField(max_length=200)
    numero = models.CharField(max_length=5)
    complemento = models.CharField(max_length=200, blank=True)
    bairro = models.CharField(max_length=200)
    cidade = models.CharField(max_length=200)
    estado = models.CharField(max_length=200)
    pais = models.CharField(max_length=200)
    contratos = models.ManyToManyField(Contrato, related_name='estudante')
    usuario = models.ForeignKey(User, on_delete=models.CASCADE)
    datahora_ultima_alteracao = models.DateTimeField(auto_now=True)
    datahora_cadastro = models.DateTimeField(auto_now_add=True)
    is_active = models.BooleanField(default=True)
    def __str__(self):
        return self.id

class PessoaResponsavel(models.Model):
    id = models.CharField(primary_key=True, max_length=12)
    escola = models.ForeignKey(Escola, on_delete=models.CASCADE)
    estudantes = models.ManyToManyField(PessoaEstudante, related_name='responsaveis')
    nome = models.CharField(max_length=200)
    data_nascimento = models.DateField()
    cpf = models.CharField(max_length=14)
    rg = models.CharField(max_length=12)
    celular = models.CharField(max_length=13)
    telefone = models.CharField(max_length=13, blank=True)
    email = models.EmailField()
    genero = models.CharField(max_length=200)
    cor = models.CharField(max_length=200)
    estado_civil = models.CharField(max_length=200)
    foto = models.ImageField(upload_to='pessoas/fotos/responsaveis/%Y', blank=True)
    cep = models.CharField(max_length=9)
    lougradouro = models.CharField(max_length=200)
    numero = models.CharField(max_length=5)
    complemento = models.CharField(max_length=200, blank=True)
    bairro = models.CharField(max_length=200)
    cidade = models.CharField(max_length=200)
    estado = models.CharField(max_length=200)
    pais = models.CharField(max_length=200)
    contratos = models.ManyToManyField(Contrato, related_name='responsavel')
    usuario = models.ForeignKey(User, on_delete=models.CASCADE)
    datahora_ultima_alteracao = models.DateTimeField(auto_now=True)
    datahora_cadastro = models.DateTimeField(auto_now_add=True)
    is_active = models.BooleanField(default=True)
    def __str__(self):
        return self.id

class PessoaColaborador(models.Model):
    id = models.CharField(primary_key=True, max_length=12)
    escola = models.ForeignKey(Escola, on_delete=models.CASCADE)
    matricula = models.CharField(max_length=5)
    nome = models.CharField(max_length=200)
    data_nascimento = models.DateField()
    cpf = models.CharField(max_length=14)
    rg = models.CharField(max_length=12)
    celular = models.CharField(max_length=13)
    telefone = models.CharField(max_length=13, blank=True)
    email = models.EmailField()
    genero = models.CharField(max_length=200)
    cor = models.CharField(max_length=200)
    estado_civil = models.CharField(max_length=200)
    foto = models.ImageField(upload_to='pessoas/fotos/colaboradores/%Y', blank=True)
    cep = models.CharField(max_length=9)
    lougradouro = models.CharField(max_length=200)
    numero = models.CharField(max_length=5)
    complemento = models.CharField(max_length=200, blank=True)
    bairro = models.CharField(max_length=200)
    cidade = models.CharField(max_length=200)
    estado = models.CharField(max_length=200)
    pais = models.CharField(max_length=200)
    departamento = models.CharField(max_length=100)
    cargo = models.CharField(max_length=100)
    ramal = models.CharField(max_length=10, blank=True)
    admissao = models.DateField()
    demissao = models.DateField(blank=True, null=True)
    remuneracao = models.CharField(max_length=20)
    banco = models.CharField(max_length=4)
    agencia = models.CharField(max_length=5)
    conta = models.CharField(max_length=12)
    contratos = models.ManyToManyField(Contrato, related_name='colaborador')
    usuario = models.ForeignKey(User, on_delete=models.CASCADE)
    datahora_ultima_alteracao = models.DateTimeField(auto_now=True)
    datahora_cadastro = models.DateTimeField(auto_now_add=True)
    is_active = models.BooleanField(default=True)
    def __str__(self):
        return self.id
